# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$init = <<SCRIPT
#sudo /home/vagrant/android-sdk-linux/platform-tools/adb kill-server
#sudo /home/vagrant/android-sdk-linux/platform-tools/adb start-server
#sudo /home/vagrant/android-sdk-linux/platform-tools/adb devices
SCRIPT

# We require latest
Vagrant.require_version ">= 1.8.5"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "BASEBOX-PLACEHOLDER"
  config.vm.hostname = "evobox"

  # We provision it using a simple shell, see xenial32.sh etc
  config.vm.provision :shell, path: "bootstrap.sh"
  #config.vm.provision :shell, run: "always", inline: $init

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

  config.vm.network "forwarded_port", guest: 8100, host: 8100
  config.vm.network "forwarded_port", guest: 35729, host: 35729

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--usb", "on"]
    vb.customize ["usbfilter", "add", "0", "--target", :id, "--name", "android", "--vendorid", "0x18d1"]
    vb.customize ["modifyvm", :id, "--memory", "2048"]
    #vb.gui = false
  end
end